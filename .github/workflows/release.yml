name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build, Test & Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Temurin JDK 25 (EA)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'
          cache: 'maven'

      - name: Docker info
        run: docker info

      - name: Build and verify
        run: mvn -B -ntp clean verify

      - name: Upload release jars
        uses: actions/upload-artifact@v4
        with:
          name: release-jars
          path: "target/*.jar"
          if-no-files-found: 'error'

      - name: Capture release metadata
        id: release_meta
        run: |
          TAG="${GITHUB_REF_NAME}"
          VERSION="${TAG#v}"
          echo "tag=${TAG}" >> "${GITHUB_OUTPUT}"
          echo "version=${VERSION}" >> "${GITHUB_OUTPUT}"

      - name: Log in to GitHub Container Registery
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          RELEASE_TAG: ${{ steps.release_meta.outputs.tag }}
          RELEASE_VERSION: ${{ steps.release_meta.outputs.version }}
        run: |
          set -eo pipefail

          IMAGE="ghcr.io/${{ github.repository }}"
          TAG="${RELEASE_TAG}"
          VERSION="${RELEASE_VERSION}"
          SHA=$(git rev-parse --short HEAD)

          TAGS=("$IMAGE:$TAG" "$IMAGE:$SHA")

          if [[ -n "${VERSION}" && "${VERSION}" != "${TAG}" ]]; then
            TAGS+=("$IMAGE:${VERSION}")
          fi

          docker build $(printf ' -t %q' "${TAGS[@]}") -f Dockerfile .

          for tag in "${TAGS[@]}"; do
            docker push "$tag"
          done

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release_meta.outputs.tag }}
          name: Release ${{ steps.release_meta.outputs.version }}
          files: |
            target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
